{"version":3,"sources":["components/Wrapper/index.js","components/Footer/index.js","components/ImgCard/index.js","components/jumbotron/index.js","App.js","index.js"],"names":["Wrapper","props","className","Footer","ImgCard","alt","id","src","image","onClick","e","imageCardClick","Jumbotron","class","randomImgObj","newImgObj","i","number","Math","floor","random","img","uuid","push","RanNewObj","console","log","App","state","imageToClick","score","MaxScore","text","IncrementScore","setState","setScoreToZero","setText","setTextLost","setMaxScore","clickTracker","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","preventDefault","num","target","this","map","images","key","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04b49402.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"container-fluid\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Clicky Game </span>\n      \n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction ImgCard (props){\n    return(\n             <img alt={props.id} src={props.image}  className=\"img-thumbnail\" onClick = {(e)=> props.imageCardClick(e) }/>\n\n             \n             \n    )\n\n} \n\nexport default ImgCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron (){\n    return(\n        <div class=\"jumbotron jumbotron-fluid bcolor\">\n        <div class=\"container\">\n          <h1 class=\"title\">Clicky Game!</h1>\n          <p class=\"subtitle\">Click on an image to earn points, but don't click on any more than once!.</p>\n        </div>\n      </div>\n       \n    )\n\n} \n\nexport default Jumbotron;","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Wrapper from \"./components/Wrapper\"\nimport Footer from \"./components/Footer\"\nimport ImgCard from \"./components/ImgCard\"\nimport Jumbotron from \"./components/jumbotron\"\nimport img from \"./images.json\"\n\nfunction randomNumber() {\n  // let min = Math.ceil(1);\n  // let max = Math.floor(18);\n  return Math.floor(Math.random() * 18); // (max - min + 1)) + min;\n}\n\nfunction randomImgObj() {\n  var newImgObj = [];\n\n  for (var i = 0; i < 12; i++) {\n    let number = randomNumber();\n    const image = { ...img[number], uuid: i }\n    newImgObj.push(image);\n  }\n  return newImgObj;\n\n}\nvar RanNewObj = [];\n\nRanNewObj = randomImgObj();\nconsole.log(RanNewObj);\n\n\nclass App extends Component {\n\n  state = {\n    imageToClick: RanNewObj,\n    score: 0,\n    MaxScore: 10,\n    text: \"Click an image to begin!\"\n  };\n\n  // Increment score  by 1\n  IncrementScore = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ score: this.state.score + 1 });\n  };\n\n  setScoreToZero = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ score: 0 });\n  }\n\n  setText = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ text: \"You guessed Correctly!\" });\n  }\n\n  setTextLost = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ text: \"You guessed incorrectly!\" });\n  }\n\n  setMaxScore = () => {\n    // We always use the setState method to update a component's state\n    if (this.state.MaxScore < this.state.score) {\n      this.setState({ MaxScore: this.state.score })\n    } else {\n      this.setState({ MaxScore: 10 });\n    }\n\n  }\n\n  //Tracking image clicked\n  clickTracker = { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0 };\n\n  imageCardClick = e => {\n    e.preventDefault();\n    const num = e.target.alt;\n    console.log(num);\n    if (this.clickTracker[num] === 1) {\n      this.setTextLost();\n      this.setScoreToZero();\n      console.log(\"You Lost\");\n      this.clickTracker = { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0 };\n      this.setMaxScore();\n    } else {\n      this.setText();\n      this.clickTracker[num] = 1;\n      this.setState({\n        imageToClick: randomImgObj()\n      });\n      this.IncrementScore();\n    }\n    console.log(this.clickTracker);\n\n  }\n\n  render() {\n    return (\n      <div>\n\n<Jumbotron />\n        <div className=\"container\">\n        \n        <nav className=\"navbar\">\n          <ul>\n            <li className=\"brand\"> Clicky Game!</li>\n            <li>{this.state.text}</li>\n            <li>Score: {this.state.score} | Top Score: {this.state.MaxScore}</li>\n          </ul>\n        </nav>  \n        </div>\n        <br />\n        <Wrapper>\n          <div className=\"container\">\n            {this.state.imageToClick.map(images => (\n              <ImgCard\n                id={images.id}\n                key={images.uuid}\n                image={images.image}\n                imageCardClick={this.imageCardClick}\n              />\n            ))}\n          </div>\n          <Footer />\n        </Wrapper>\n      </div>\n\n    );\n\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}